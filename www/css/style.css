/* Empty. Add your own CSS if you like */
.giveaway
{
    border:10px solid transparent;
}
.content-bg
{
    background:#799CB9 url('../img/bg_ptrn.png');

}

.pac-icon {
    width: 0;
    background-image: none;
}

.hdpi.pac-logo:after {
    display: none;
}

.toggle.toggle-instagivaway input:checked + .track {
    border-color: #ddd;
    background-color: #fff; }

#giveaway_canvas
{
    width:100%;
    height:auto;
}
ion-infinite-scroll i:before
{
    color:#fff;
}
.loupe
{
    position: absolute;
    padding:10px;
    color: white;
    text-shadow: 1px 1px 1px black;
    opacity: 0.6;
}
.cam-btn
{
    margin-top:-60px;
    margin-left:7px;
    opacity: 0.75;
    border-radius: 100px;
}
.shining {
    background: -webkit-gradient(linear, left top, right top, from(#222), to(#222), color-stop(0.25, #222), color-stop(0.5, #fff), color-stop(0.75, #222)) 0 0 no-repeat;
    -webkit-background-size: 125px;
    color: rgba(255, 255, 255, 0.1);
    -webkit-background-clip: text;
    -webkit-animation-name: shine;
    -webkit-animation-duration: 1s;
    -webkit-animation-iteration-count: infinite;
    margin:0 40px;
}


@-webkit-keyframes shine
{
    0%
    {
        background-position: top left;
    }
    100%
    {
        background-position: top right;
    }
}

.giveaway:before
{
    position: absolute;
    z-index: 999;
    right: 0px;
    padding: 5px 10px;
    margin: -1px 9px;
    background: #2F81AF;
    color: white;
    border-radius: 0 0 0 10px;
    border: 1px solid #517fa4;
    border-width: 0px 0 1px 1px;
}

.giveaway.notify:before
{
    background: #ef473a !important;
    border:0px !important;
}
.giveaway.new:before
{
    background: #ef473a !important;
    border:0px !important;
}

.spinner-ios, .spinner-ios-small {
    stroke: #fff;
}

.scroll-refresher .ionic-refresher-content
{
    color:#fff;
}

:not(.icon).ng-enter {
    /* standard transition code */
    -webkit-transition: 1s linear all;
    transition: 0.2s linear all;
    opacity:0;
}
:not(.icon).ng-enter-stagger {
    /* this will have a 100ms delay between each successive leave animation */
    -webkit-transition-delay: 0.1s;
    transition-delay: 0.1s;

    /* in case the stagger doesn't work then these two values
     must be set to 0 to avoid an accidental CSS inheritance */
    -webkit-transition-duration: 0s;
    transition-duration: 0s;
}
:not(.icon).ng-enter.ng-enter-active {
    /* standard transition styles */
    opacity:1;
}
.loading-bg
{
    background: url('../img/loading.png') no-repeat center center;
}
.v-scroll
{

    overflow: scroll;
    white-space: nowrap;
}

.v-scroll .avatar
{
    width:80px;
    margin:auto;
    border-radius: 40px;
    padding:10px;
}
.v-scroll .ribbon
{
    width:80px;
    margin:auto;
    padding:10px;
}
